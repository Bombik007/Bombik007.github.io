{"version":3,"sources":["images/logo.svg","images/home.svg","components/Navigation.js","pages/Login.js","hoc/authorization.js","components/maps/FifthFloor.js","components/maps/SixthFloor.js","components/SimpleModal.js","components/FilterPanel/CardInfo.js","components/UserCard.js","pages/User.js","components/Table/TableInput.js","components/Table/index.js","components/FilterPanel/FilterButtons.js","components/FilterPanel/CheckboxOption.js","components/FilterPanel/DropdownFilter.js","components/FilterPanel/index.js","pages/Dashboard.js","routes.js","serviceWorker.js","index.js","images/arrow_back.svg"],"names":["module","exports","__webpack_require__","p","withStyles","root","flexGrow","email","paddingTop","paddingRight","color","fontWeight","textAlign","logIn","maxWidth","height","borderColor","&:hover","backgroundColor","_ref","isLoggedIn","history","classes","storageData","localStorage","getItem","push","JSON","parse","onSuccess","removeItem","res","gglCreds","profileObj","token","Zi","id_token","setItem","stringify","react_default","a","createElement","className","AppBar_default","position","Toolbar_default","Link","to","src","logo","alt","Typography_default","fontSize","google_login","clientId","buttonText","render","renderProps","Button_default","variant","onClick","onLogoutSuccess","onFailure","console","log","authorization","Component","url","arguments","length","undefined","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","props","creds","React","components_Navigation","FifthFloor","active","viewBox","x","y","width","concat","x1","y1","x2","y2","style","stroke","strokeWidth","writingMode","SixthFloor","id","theme","modal","display","alignItems","justifyContent","paper","minWidth","palette","background","boxShadow","shadows","padding","spacing","unit","outline","button","margin","input","header","marginLeft","open","handleState","children","Modal_default","aria-labelledby","aria-describedby","Grid_default","container","justify","index_es","fill","userInfo","marginBottom","marginTop","component","align","UserCard","state","modalOpen","modalContent","date","_this","setState","setModalContent","event","target","name","setUser","index","renderList","objectSpread","switchUser","targetIndex","_this$props","selectedUser","dispatch","find","el","ID","indexOf","result","type","formatDate","month","slice","startDate","formattedDate","_this2","_this$state","_this$props2","renderedSection","room","phone","email1","location","employment","profile","seniority","manager","paymentMode","photo","FifthFloor_FifthFloor","setRoomList","SixthFloor_SixthFloor","Card_default","card","square","KeyboardArrowLeft_default","infoContainer","item","xs","userHeader","home","CardContent_default","userInfoPadding","FilterPanel_CardInfo","String","replace","arrow","KeyboardArrowRight_default","components_SimpleModal","headerPadding","connect","store","User","Fragment","components_UserCard","placeholder","onChange","onFocus","class","title","TablePaginationActions","handleFirstPageButtonClick","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","count","rowsPerPage","IconButton_default","disabled","aria-label","direction","LastPage_default","FirstPage_default","TablePaginationActionsWrapped","flexShrink","text","secondary","withTheme","UsersTable","handleChangePage","handleChangeRowsPerPage","searchValue","setActiveRoom","selectUser","clearSearch","tableWrapper","Paper_default","Table_default","table","TableHead_default","tableHeader","TableRow_default","TableCell_default","Table_TableInput","roomCell","TableBody_default","map","row","noBorder","TablePagination_default","rowsPerPageOptions","colSpan","SelectProps","native","onChangeRowsPerPage","ActionsComponent","minHeight","flexBasis","cursor","border","paddingLeft","green","borderBottom","FilterButtons","switchButton","e","returnFilterValue","targetProperty","initialActive","optionTwo","optionThree","headerTwo","headerThree","react","styles","&$checked","checked","handleChange","Checkbox_default","heading","typography","pxToRem","fontWeightRegular","valueArr","targetProp","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","FormControl_default","FormGroup_default","FormControlLabel_default","control","FilterPanel_CheckboxOption","label","Filters","checkboxes","PE","Personal Card","Leobit Card","None","CEO","Software Engineer","Designer","Marketing Manager","HR Manager","Sales Manager","English Teacher","Project Manager","Recruiting Manager","Software Quality Control Engineer","Office Manager","System Administrator","Data Science Engineer","Accountant/Financial Manager","Delivery","Recruiter/HR","HR/R Director","Competence Manager",".Net","C/C++","iOS","Marketing","Ruby","Android","Management","AQA","Java","UI/UX/","Sales","BI Pentaho DI ETL","Web UI","HR","PHP","MQA","Unity","SysAdmin","Data Science","Accounting","Data","DevOps","Marketing&Business Development","Senior","Lead","Intermediate","Junior","Trainee","Architect","VP","Director","Oleksii Smirnov","Oleksandr Korytskyy","Kristi Sychak","Vitaliy Lysovych","Mariya Koval","Oleksa Stelmakh","Halyna Balias","property","defineProperty","toggleSearchParams","setPayment","getTruthy","setPosition","setProfile","setSeniority","setManager","propName","obj","keys","filter","_this$state$checkboxe","paymentKeys","positionKeys","profileKeys","seniorityKeys","managerKeys","gutterBottom","FilterButtons_FilterButtons","headerOne","FilterPanel_DropdownFilter","App","originalArray","filterParams","activeRoom","viewRoom","_e$target","filterList","toggleModal","createData","backToMap","toConsumableArray","Array","isArray","setUserList","split","axios","get","then","data","catch","err","payload","_this3","temp","photoUrlParser","list","toRender","arr","forEach","_loop","prop","arrFilter","_loop2","toLowerCase","match","renderMap","floorNumber","_this$state2","FilterPanel","components_Table","initialState","selectedRoom","error","createStore","action","Boolean","window","hostname","ReactDOM","es","BrowserRouter","Switch","Route","exact","path","Dashboard","Login","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03b327ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ae92564c.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.d5439af2.svg\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Button from '@material-ui/core/Button'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login'\r\nimport logo from '../images/logo.svg'\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    email: {\r\n        paddingTop: 15,\r\n        paddingRight: 15,\r\n        color: '#57B12E',\r\n        fontWeight: 600,\r\n        textAlign: 'center,'\r\n    },\r\n    logIn: {\r\n        maxWidth: 500,\r\n        height: 48,\r\n        borderColor: '#57B12E',\r\n        color: '#57B12E',\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    },\r\n}\r\n\r\nconst Navigation = ({ isLoggedIn, history, classes }) => {\r\n    const storageData = localStorage.getItem('gglTkn')\r\n    if (isLoggedIn && storageData === null) history.push('/login')\r\n    const email = (isLoggedIn && storageData !== null) ? JSON.parse(storageData).email : 'Please, sign in'\r\n    const logIn = res => {\r\n        const gglCreds = {\r\n            email: res.profileObj.email,\r\n            token: res.Zi.id_token\r\n        }\r\n        localStorage.setItem('gglTkn', JSON.stringify(gglCreds))\r\n        history.push('/')\r\n    }\r\n    const logOut = () => {\r\n        localStorage.removeItem('gglTkn')\r\n        history.push('/login')\r\n    }\r\n    const onSuccess = isLoggedIn ? logOut : logIn\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color='inherit'>\r\n                <Toolbar>\r\n                    <div className='wrapper-nav'>\r\n                        <Link to='/'>\r\n                            <img src={logo} alt='company logo' className=\"company-logo\" />\r\n                        </Link>\r\n                        <div className='flex'>\r\n                            <Typography fontSize={14} className={classes.email}>\r\n                                {email}\r\n                            </Typography>\r\n                            {\r\n                                isLoggedIn ? (\r\n                                    <GoogleLogout\r\n                                        clientId=\"105624313747-t5h7j9hel31rvtnp70oroagtodvqfj6f.apps.googleusercontent.com\"\r\n                                        buttonText=\"Logout\"\r\n                                        render={renderProps => (\r\n                                            <Button\r\n                                                variant=\"outlined\"\r\n                                                className={classes.logIn}\r\n                                                onClick={renderProps.onClick}\r\n                                            >\r\n                                                Sign Out\r\n                                                    </Button>\r\n                                        )}\r\n                                        onLogoutSuccess={onSuccess}\r\n                                    >\r\n                                    </GoogleLogout>\r\n                                ) : (\r\n                                        <GoogleLogin\r\n                                            clientId=\"105624313747-t5h7j9hel31rvtnp70oroagtodvqfj6f.apps.googleusercontent.com\"\r\n                                            render={renderProps => (\r\n                                                <Button\r\n                                                    variant=\"outlined\"\r\n                                                    className={classes.logIn}\r\n                                                    onClick={renderProps.onClick}\r\n                                                >\r\n                                                    Log In\r\n                                                        </Button>\r\n                                            )}\r\n                                            buttonText=\"Login\"\r\n                                            onSuccess={onSuccess}\r\n                                            onFailure={() => console.log('bl')}\r\n                                        />\r\n                                    )}\r\n                        </div>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(Navigation)","import React from 'react'\r\nimport Navigation from '../components/Navigation'\r\nimport authorization from '../hoc/authorization'\r\n\r\nconst Login = ({ history }) => <Navigation isLoggedIn={false} history={history} />\r\n\r\nexport default authorization(Login)","import React from 'react'\r\n\r\nexport default function (Component, url = '/') {\r\n    class authorization extends React.Component {\r\n\r\n        componentDidMount() {\r\n            const { history } = this.props\r\n            const creds = localStorage.getItem('gglTkn')\r\n\r\n            history.push(creds !== null ? url : '/login')\r\n        }\r\n\r\n        render() {\r\n            return <Component history={this.props.history} />\r\n        }\r\n    }\r\n    return authorization\r\n}\r\n","import React from 'react'\r\n\r\nexport const FifthFloor = ({ active, onClick }) => (\r\n    <div className='map'>\r\n        <svg viewBox=\"50 0 1000 550\">\r\n            <rect x={900} y={30} height={50} width={100}\r\n                className={`room ${active === 528 && 'active'}`}\r\n                onClick={() => onClick(528)}\r\n            />\r\n            <text x={935} y={60}>528</text>\r\n            <rect x={845} y={30} height={300} width={50} />\r\n            <rect x={740} y={30} height={50} width={100}\r\n                className={`room ${active === 527 && 'active'}`}\r\n                onClick={() => onClick(527)}\r\n            />\r\n            <text x={775} y={60}>527</text>\r\n            <rect x={900} y={85} height={60} width={100}\r\n                className={`room ${active === 529 && 'active'}`}\r\n                onClick={() => onClick(529)}\r\n            />\r\n            <text x={935} y={120}>529</text>\r\n            <rect x={740} y={85} height={60} width={100} />\r\n            <text x={775} y={120}>WC</text>\r\n            <rect x={790} y={150} height={145} width={50} />\r\n            <rect x={790} y={180} height={10} width={23} />\r\n            <rect x={790} y={190} height={10} width={23} />\r\n            <rect x={790} y={200} height={10} width={23} />\r\n            <rect x={790} y={210} height={10} width={23} />\r\n            <rect x={790} y={220} height={10} width={23} />\r\n            <rect x={790} y={230} height={10} width={23} />\r\n            <rect x={790} y={240} height={10} width={23} />\r\n            <rect x={790} y={250} height={10} width={23} />\r\n            <rect x={817} y={180} height={10} width={23} />\r\n            <rect x={817} y={190} height={10} width={23} />\r\n            <rect x={817} y={200} height={10} width={23} />\r\n            <rect x={817} y={210} height={10} width={23} />\r\n            <rect x={817} y={220} height={10} width={23} />\r\n            <rect x={817} y={230} height={10} width={23} />\r\n            <rect x={817} y={240} height={10} width={23} />\r\n            <rect x={817} y={250} height={10} width={23} />\r\n            <g>\r\n                <rect x={740} y={150} width={45} height={40} />\r\n                <rect x={745} y={155} width={35} height={30} />\r\n                <line x1={745} y1={155} x2={780} y2={185} style={{ stroke: \"rgb(0, 0, 0)\", strokeWidth: 1 }} />\r\n                <line x1={745} y1={185} x2={780} y2={155} style={{ stroke: \"rgb(0, 0, 0)\", strokeWidth: 1 }} />\r\n            </g>\r\n            <g>\r\n                <rect x={900} y={150} height={70} width={100}\r\n                    className={`room ${active === 530 && 'active'}`}\r\n                    onClick={() => onClick(530)}\r\n                />\r\n                <text x={935} y={190}>530</text>\r\n            </g>\r\n            <g>\r\n                <rect x={900} y={225} height={70} width={100}\r\n                    className={`room ${active === 531 && 'active'}`}\r\n                    onClick={() => onClick(531)}\r\n                />\r\n                <text x={935} y={265}>531</text>\r\n            </g>\r\n            <g writingMode=\"tb\">\r\n                <rect x={740} y={195} height={100} width={45} />\r\n                <text x={765} y={205}>Storeroom</text>\r\n            </g>\r\n            <g>\r\n                <rect x={655} y={195} height={100} width={80}\r\n                    className={`room ${active === 520 && 'active'}`}\r\n                    onClick={() => onClick(520)}\r\n                />\r\n                <text x={685} y={250}>520</text>\r\n            </g>\r\n            <g>\r\n                <rect x={570} y={195} height={100} width={80}\r\n                    className={`room ${active === 519 && 'active'}`}\r\n                    onClick={() => onClick(519)}\r\n                />\r\n                <text x={600} y={250}>519</text>\r\n            </g>\r\n            <g>\r\n                <rect x={485} y={195} height={100} width={80}\r\n                    className={`room ${active === 518 && 'active'}`}\r\n                    onClick={() => onClick(518)}\r\n                />\r\n                <text x={515} y={250}>518</text>\r\n            </g>\r\n            <g>\r\n                <rect x={400} y={195} height={100} width={80}\r\n                    className={`room ${active === 517 && 'active'}`}\r\n                    onClick={() => onClick(517)}\r\n                />\r\n                <text x={430} y={250}>517</text>\r\n            </g>\r\n            <g>\r\n                <rect x={270} y={195} height={100} width={125} />\r\n                <text x={300} y={250}>Ladies WC</text>\r\n            </g>\r\n            <g>\r\n                <rect x={95} y={195} height={100} width={170} />\r\n                <text x={155} y={250}>Kitchen</text>\r\n            </g>\r\n            <g>\r\n                <rect x={95} y={300} height={50} width={905} />\r\n                <line x1={845} y1={300} x2={895} y2={300} style={{ stroke: \"rgb(255, 255, 255)\", strokeWidth: 2 }}\r\n                />\r\n            </g>\r\n            <g>\r\n                <rect x={900} y={355} height={120} width={100}\r\n                    className={`room ${active === 502 && 'active'}`}\r\n                    onClick={() => onClick(502)}\r\n                />\r\n                <text x={940} y={415}>502 </text>\r\n            </g>\r\n            <g>\r\n                <rect x={795} y={355} height={120} width={100}\r\n                    className={`room ${active === 503 && 'active'}`}\r\n                    onClick={() => onClick(503)}\r\n                />\r\n                <text x={830} y={415}>503</text>\r\n            </g>\r\n            <g>\r\n                <rect x={690} y={355} height={120} width={100}\r\n                    className={`room ${active === 504 && 'active'}`}\r\n                    onClick={() => onClick(504)}\r\n                />\r\n                <text x={725} y={415}>504</text>\r\n            </g>\r\n            <g>\r\n                <rect x={465} y={355} height={120} width={220} />\r\n                <text x={520} y={415}>Conference hall</text>\r\n            </g>\r\n            <g>\r\n                <rect x={360} y={355} height={120} width={100}\r\n                    className={`room ${active === 508 && 'active'}`}\r\n                    onClick={() => onClick(508)}\r\n                />\r\n                <text x={395} y={415}>508</text>\r\n            </g>\r\n            <g>\r\n                <rect x={255} y={355} height={120} width={100}\r\n                    className={`room ${active === 509 && 'active'}`}\r\n                    onClick={() => onClick(509)}\r\n                />\r\n                <text x={290} y={415}>509</text>\r\n            </g>\r\n            <g>\r\n                <rect x={150} y={355} height={120} width={100}\r\n                    className={`room ${active === 510 && 'active'}`}\r\n                    onClick={() => onClick(510)}\r\n                />\r\n                <text x={185} y={415}>510</text>\r\n            </g>\r\n            <g>\r\n                <rect x={95} y={355} height={120} width={50} />\r\n                <rect x={95} y={380} height={10} width={23} />\r\n                <rect x={95} y={390} height={10} width={23} />\r\n                <rect x={95} y={400} height={10} width={23} />\r\n                <rect x={95} y={410} height={10} width={23} />\r\n                <rect x={95} y={420} height={10} width={23} />\r\n                <rect x={95} y={430} height={10} width={23} />\r\n                <rect x={95} y={440} height={10} width={23} />\r\n                <rect x={122} y={380} height={10} width={23} />\r\n                <rect x={122} y={390} height={10} width={23} />\r\n                <rect x={122} y={400} height={10} width={23} />\r\n                <rect x={122} y={410} height={10} width={23} />\r\n                <rect x={122} y={420} height={10} width={23} />\r\n                <rect x={122} y={430} height={10} width={23} />\r\n                <rect x={122} y={440} height={10} width={23} />\r\n            </g>\r\n        </svg>\r\n    </div>\r\n)","import React from 'react'\r\n\r\nexport const SixthFloor = ({ active, onClick }) => (\r\n    <div className='map'>\r\n        <svg viewBox=\"100 0 1000 550\">\r\n            <g id=\"room628\">\r\n                <rect x={700} y={30} height={50} width={100}\r\n                    className={`room ${active === 628 && 'active'}`}\r\n                    onClick={() => onClick(628)}></rect>\r\n                <text x={734} y={60}>628</text>\r\n            </g>\r\n            <g id='vertical-corridor'>\r\n                <rect x={645} y={30} height={300} width={50}></rect>\r\n            </g>\r\n            <g id=\"room627\">\r\n                <rect x={540} y={30} height={50} width={100}\r\n                    className={`room ${active === 627 && 'active'}`}\r\n                    onClick={() => onClick(627)} ></rect>\r\n                <text x={575} y={60}>627</text>\r\n            </g>\r\n            <g id=\"room629\">\r\n                <rect x={700} y={85} height={60} width={100}\r\n                    className={`room ${active === 629 && 'active'}`}\r\n                    onClick={() => onClick(629)}></rect>\r\n                <text x={735} y={120}>629</text>\r\n            </g>\r\n            <g id=\"WC\">\r\n                <rect x={540} y={85} height={60} width={100}></rect>\r\n                <text x={575} y={120}>WC</text>\r\n            </g>\r\n            <g id='exit1'>\r\n                <rect x={590} y={150} height={145} width={50}></rect>\r\n                <g>\r\n                    <rect x={590} y={180} height={10} width={23}></rect>\r\n                    <rect x={590} y={190} height={10} width={23}></rect>\r\n                    <rect x={590} y={200} height={10} width={23}></rect>\r\n                    <rect x={590} y={210} height={10} width={23}></rect>\r\n                    <rect x={590} y={220} height={10} width={23}></rect>\r\n                    <rect x={590} y={230} height={10} width={23}></rect>\r\n                    <rect x={590} y={240} height={10} width={23}></rect>\r\n                    <rect x={590} y={250} height={10} width={23}></rect>\r\n\r\n                    <rect x={617} y={180} height={10} width={23}></rect>\r\n                    <rect x={617} y={190} height={10} width={23}></rect>\r\n                    <rect x={617} y={200} height={10} width={23}></rect>\r\n                    <rect x={617} y={210} height={10} width={23}></rect>\r\n                    <rect x={617} y={220} height={10} width={23}></rect>\r\n                    <rect x={617} y={230} height={10} width={23}></rect>\r\n                    <rect x={617} y={240} height={10} width={23}></rect>\r\n                    <rect x={617} y={250} height={10} width={23}></rect>\r\n                </g>\r\n            </g>\r\n            <g id='elevator'>\r\n                <rect x={540} y={150} width={45} height={40}></rect>\r\n                <g>\r\n                    <rect x={545} y={155} width={35} height={30}></rect>\r\n                    <line x1={545} y1={155} x2={580} y2={185} style={{ stroke: 'rgb(0, 0, 0)', strokeWidth: 1 }} />\r\n                    <line x1={545} y1={185} x2={580} y2={155} style={{ stroke: 'rgb(0, 0, 0)', strokeWidth: 1 }} />\r\n                </g>\r\n            </g>\r\n            <g id=\"room630\">\r\n                <rect x={700} y={150} height={70} width={100}\r\n                    className={`room ${active === 630 && 'active'}`}\r\n                    onClick={() => onClick(630)}></rect>\r\n                <text x={735} y={190}>630</text>\r\n            </g>\r\n\r\n            <g id=\"room631\">\r\n                <rect x={700} y={225} height={70} width={100}\r\n                    className={`room ${active === 631 && 'active'}`}\r\n                    onClick={() => onClick(631)}></rect>\r\n                <text x={735} y={265}>631</text>\r\n            </g>\r\n            <g id='room621'>\r\n                <rect x={540} y={195} height={100} width={45}\r\n                    className={`room ${active === 621 && 'active'}`}\r\n                    onClick={() => onClick(621)}></rect>\r\n                <text x={550} y={250}>621</text>\r\n            </g>\r\n            <g id='room620'>\r\n                <rect x={425} y={195} height={100} width={110}\r\n                    className={`room ${active === 620 && 'active'}`}\r\n                    onClick={() => onClick(620)}></rect>\r\n                <text x={470} y={250}>620</text>\r\n            </g>\r\n            <g id='room602'>\r\n                <rect x={700} y={355} height={120} width={100}\r\n                    className={`room ${active === 602 && 'active'}`}\r\n                    onClick={() => onClick(602)}></rect>\r\n                <text x={735} y={415}>602</text>\r\n            </g>\r\n            <g id='room603'>\r\n                <rect x={595} y={355} height={120} width={100}\r\n                    className={`room ${active === 603 && 'active'}`}\r\n                    onClick={() => onClick(603)}></rect>\r\n                <text x={630} y={415}>603</text>\r\n            </g>\r\n            <g id='room604'>\r\n                <rect x={510} y={355} height={120} width={80}\r\n                    className={`room ${active === 604 && 'active'}`}\r\n                    onClick={() => onClick(604)}></rect>\r\n                <text x={535} y={415}>604</text>\r\n            </g>\r\n            <g id='room601'>\r\n                <rect x={425} y={355} height={120} width={80}\r\n                    className={`room ${active === 605 && 'active'}`}\r\n                    onClick={() => onClick(605)}></rect>\r\n                <text x={450} y={415}>605</text>\r\n            </g>\r\n            <g id='horizontal-corridor'>\r\n                <rect x={425} y={300} height={50} width={375}></rect>\r\n                <line x1={645} y1={300} x2={695} y2={300} style={{ stroke: 'rgb(255, 255, 255)', strokeWidth: 3 }}></line>\r\n            </g>\r\n        </svg>\r\n    </div>\r\n)","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Modal from '@material-ui/core/Modal'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Close } from '@material-ui/icons'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst styles = theme => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        minWidth: 800,\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing.unit * 4,\r\n        outline: 'none',\r\n    },\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n        color: '#57B12E',\r\n        fontWeight: 600,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    header: {\r\n        marginLeft: 30,\r\n    }\r\n})\r\n\r\nconst SimpleModal = ({ open, handleState, header, children, classes }) => (\r\n    <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={open}\r\n        className={classes.modal}\r\n    >\r\n        <div className={classes.paper}>\r\n            <Grid container justify='space-between'>\r\n                <Typography variant=\"h6\" id=\"modal-title\" className={classes.header}>\r\n                    {header}\r\n                </Typography>\r\n                <Close style={{ fill: '#999999' }} onClick={handleState} />\r\n            </Grid>\r\n            {children}\r\n            <Button onClick={handleState} className={classes.button}>\r\n                CLOSE\r\n            </Button>\r\n        </div>\r\n    </Modal>\r\n)\r\n\r\nexport default withStyles(styles)(SimpleModal)","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { withStyles } from '@material-ui/core'\r\n\r\nconst styles = {\r\n    userInfo: {\r\n        fontWeight: 600,\r\n        textAlign: 'left',\r\n        marginBottom: 15,\r\n        marginTop: 5,\r\n    },\r\n}\r\n\r\nconst CardInfo = ({ header, value, classes }) => {\r\n    if (value === undefined || !value.length) return null\r\n    return (\r\n        <div className='CardInfo'>\r\n            <Typography component=\"p\" align=\"left\">\r\n                {header}\r\n            </Typography>\r\n            <Typography component=\"p\" className={classes.userInfo}>\r\n                {value}\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(CardInfo)","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { FifthFloor } from '../components/maps/FifthFloor'\r\nimport { SixthFloor } from '../components/maps/SixthFloor'\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport SimpleModal from './SimpleModal'\r\nimport home from '../images/home.svg'\r\nimport arrow from '../images/arrow_back.svg'\r\nimport { connect } from 'react-redux'\r\nimport CardInfo from './FilterPanel/CardInfo';\r\n\r\nconst styles = {\r\n    headerPadding: {\r\n        paddingTop: 15,\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n        maxWidth: 1355,\r\n        height: 'auto',\r\n        margin: '24px auto'\r\n    },\r\n    userInfo: {\r\n        fontWeight: 600,\r\n        textAlign: 'left',\r\n        marginBottom: 15,\r\n    },\r\n    infoContainer: {\r\n        margin: '0 auto',\r\n        width: '90%',\r\n    },\r\n    userHeader: {\r\n        paddingTop: 27,\r\n    },\r\n    userInfoPadding: {\r\n        paddingTop: 20,\r\n    }\r\n}\r\n\r\nclass UserCard extends Component {\r\n    state = {\r\n        modalOpen: false,\r\n        modalContent: null,\r\n        date: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.selectedUser !== null) {\r\n            const { startDate } = this.props.selectedUser\r\n            const formattedDate = this.formatDate(startDate)\r\n            this.setState({ date: formattedDate })\r\n        }\r\n    }\r\n\r\n    handleState = () => this.setState({ modalOpen: !this.state.modalOpen })\r\n\r\n    setModalContent = (event) => this.setState({ modalContent: event.target.name })\r\n\r\n    onClick = (event) => {\r\n        this.setModalContent(event)\r\n        this.handleState()\r\n    }\r\n\r\n    setUser = index => {\r\n        const { renderList } = this.props\r\n        const target = renderList[index]\r\n        return { ...target }\r\n    }\r\n\r\n    switchUser = (value) => {\r\n        const { renderList, selectedUser, dispatch } = this.props\r\n        const target = renderList.find(el => el.ID === selectedUser.ID)\r\n        const index = renderList.indexOf(target)\r\n        let targetIndex\r\n\r\n        if (value === 'forward') {\r\n            targetIndex = index + 1\r\n\r\n        } else if (value === 'backwards') {\r\n            targetIndex = index - 1\r\n        }\r\n\r\n        if (targetIndex < 0 || targetIndex >= renderList.length) return\r\n        const result = renderList[targetIndex]\r\n\r\n        dispatch({ type: 'SET_ACTIVE', selectedUser: { ...result } })\r\n    }\r\n\r\n    formatDate = (date) => {\r\n        if (date !== undefined) {\r\n            const monthNames = [\r\n                \"January\", \"February\", \"March\",\r\n                \"April\", \"May\", \"June\", \"July\",\r\n                \"August\", \"September\", \"October\",\r\n                \"November\", \"December\"\r\n            ]\r\n            const monthNumber = date.slice(5, 7)\r\n            const month = monthNames[+monthNumber - 1]\r\n            const result = `${date.slice(0, 4)} ${month} ${date.slice(8, 10)}`\r\n            return result\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { modalOpen, modalContent, formattedDate } = this.state\r\n        const { selectedUser, classes } = this.props\r\n\r\n        if (selectedUser === null) return null\r\n\r\n        const {\r\n            name,\r\n            position,\r\n            room,\r\n            phone,\r\n            email1,\r\n            location,\r\n            employment,\r\n            profile,\r\n            seniority,\r\n            manager,\r\n            paymentMode,\r\n            photo\r\n        } = selectedUser\r\n        let renderedSection, header\r\n\r\n        if (modalContent === 'name') {\r\n            header = ''\r\n            renderedSection = (\r\n                <Grid container justify=\"center\">\r\n                    <img src={photo} alt=\"\" className=\"photo-modal\" />\r\n                </Grid>\r\n            )\r\n        } else {\r\n            if (room < 600) {\r\n                header = '5th Floor'\r\n                renderedSection = <FifthFloor active={room} onClick={this.setRoomList} />\r\n            } else {\r\n                header = '6th Floor'\r\n                renderedSection = <SixthFloor active={room} onClick={this.setRoomList} />\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Card className={classes.card} square={true}>\r\n                <button\r\n                    className='arrowButton'\r\n                    onClick={() => this.switchUser('backwards')}\r\n                >\r\n                    <KeyboardArrowLeft />\r\n                </button>\r\n                <Grid container className={classes.infoContainer}>\r\n                    <Grid item xs={6}>\r\n                        <Grid container>\r\n                            <Grid item xs={6}>\r\n                                <img\r\n                                    src={photo} alt=\"\"\r\n                                    className='profile-photo_big'\r\n                                    onClick={this.onClick}\r\n                                    name='name'\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Typography component=\"h6\" variant=\"h6\" align=\"left\" className={classes.userHeader}>\r\n                                    {name}\r\n                                </Typography>\r\n                                <Typography component=\"p\" align=\"left\">\r\n                                    {position}\r\n                                </Typography>\r\n                                <div className='flex' name='map' onClick={this.onClick}>\r\n                                    <img src={home} alt='room' className='home-icon' />\r\n                                    {room}\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <CardContent>\r\n                            <Grid container>\r\n                                <Grid item xs={4} className={classes.userInfoPadding}>\r\n                                    <CardInfo header='Phone number:' value={String(phone).replace(/(\\d{3})(\\d{3})(\\d{4})/, \"+$1 $2 $3\")} />\r\n                                    <CardInfo header='Email:' value={email1} />\r\n                                    <CardInfo header='Location:' value={location} />\r\n                                    <CardInfo header='Employment type:' value={employment} />\r\n                                </Grid>\r\n                                <Grid item xs={4} className={classes.userInfoPadding}>\r\n                                    <CardInfo header='Specialization:' value={profile} />\r\n                                    <CardInfo header='Seniority' value={seniority} />\r\n                                    <CardInfo header='Start date at Leobit' value={formattedDate} />\r\n                                </Grid>\r\n                                <Grid item xs={4} className={classes.userInfoPadding}>\r\n                                    <CardInfo header='PM' value={manager} />\r\n                                    <CardInfo header='Payment mode' value={paymentMode} />\r\n                                    <Link to='/' className='linkPadding'>\r\n                                        <img src={arrow} alt=\"\" />\r\n                                        <Typography variant=\"h5\">\r\n                                            Back to the list\r\n                                        </Typography>\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Grid>\r\n                </Grid>\r\n                <button\r\n                    className='arrowButton'\r\n                    onClick={() => this.switchUser('forward')}\r\n                >\r\n                    <KeyboardArrowRight />\r\n                </button>\r\n                <SimpleModal\r\n                    header={header}\r\n                    open={modalOpen}\r\n                    handleState={this.handleState}\r\n                >\r\n                    {renderedSection}\r\n                </SimpleModal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n    selectedUser: store.selectedUser,\r\n    renderList: store.renderList\r\n})\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps)(UserCard))","import React from 'react'\r\nimport UserCard from '../components/UserCard'\r\nimport Navigation from '../components/Navigation'\r\n\r\nexport const User = ({ renderList, selectedUser, history }) => (\r\n    <>\r\n        <Navigation\r\n            history={history}\r\n            isLoggedIn={true}\r\n        />\r\n        <UserCard history={history} />\r\n    </>\r\n)\r\n","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'flex-end',\r\n        position: 'relative',\r\n    },\r\n})\r\n\r\nconst TableInput = ({ name, value, placeholder, onChange, onFocus, classes }) => (\r\n    <div className={classes.root}>\r\n        <input\r\n            name={name}\r\n            value={value}\r\n            className=\"tableInput\"\r\n            type=\"text\"\r\n            placeholder={placeholder}\r\n            onChange={onChange}\r\n            onFocus={onFocus}\r\n        /><i class=\"fa fa-search search-icon\" title=\"Search\"></i>\r\n    </div>\r\n)\r\n\r\nexport default withStyles(styles)(TableInput)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport green from '@material-ui/core/colors/green'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\r\nimport LastPageIcon from '@material-ui/icons/LastPage'\r\nimport TableInput from './TableInput'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst actionsStyles = theme => ({\r\n    root: {\r\n        flexShrink: 0,\r\n        color: theme.palette.text.secondary,\r\n        marginLeft: theme.spacing.unit * 2.5,\r\n    },\r\n})\r\n\r\nclass TablePaginationActions extends React.Component {\r\n\r\n    handleFirstPageButtonClick = event => this.props.onChangePage(event, 0)\r\n\r\n    handleBackButtonClick = event => this.props.onChangePage(event, this.props.page - 1)\r\n\r\n    handleNextButtonClick = event => this.props.onChangePage(event, this.props.page + 1)\r\n\r\n    handleLastPageButtonClick = event => {\r\n        this.props.onChangePage(\r\n            event,\r\n            Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { classes, count, page, rowsPerPage, theme } = this.props\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <IconButton\r\n                    onClick={this.handleFirstPageButtonClick}\r\n                    disabled={page === 0}\r\n                    aria-label=\"First Page\"\r\n                >\r\n                    {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n                </IconButton>\r\n                <IconButton\r\n                    onClick={this.handleBackButtonClick}\r\n                    disabled={page === 0}\r\n                    aria-label=\"Previous Page\"\r\n                >\r\n                    {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n                </IconButton>\r\n                <IconButton\r\n                    onClick={this.handleNextButtonClick}\r\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                    aria-label=\"Next Page\"\r\n                >\r\n                    {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n                </IconButton>\r\n                <IconButton\r\n                    onClick={this.handleLastPageButtonClick}\r\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                    aria-label=\"Last Page\"\r\n                >\r\n                    {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n                </IconButton>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n}\r\n\r\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(TablePaginationActions)\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        marginTop: theme.spacing.unit * 3,\r\n        maxWidth: '75vw',\r\n        minHeight: '40vw',\r\n    },\r\n    table: {\r\n        minWidth: 500,\r\n        flexGrow: 1,\r\n        flexBasis: 0,\r\n        cursor: 'pointer',\r\n    },\r\n    noBorder: {\r\n        border: 'none',\r\n    },\r\n    tableWrapper: {\r\n        maxWidth: 1530,\r\n    },\r\n    header: {\r\n        paddingLeft: 30,\r\n        paddingTop: 15,\r\n        color: green[600],\r\n    },\r\n    tableHeader: {\r\n        borderBottom: '2px solid #57B12E',\r\n    },\r\n    roomCell: {\r\n        width: 100,\r\n    },\r\n})\r\n\r\nclass UsersTable extends React.Component {\r\n    state = {\r\n        page: 0,\r\n        rowsPerPage: 5,\r\n    }\r\n\r\n    handleChangePage = page => this.setState({ page })\r\n\r\n    handleChangeRowsPerPage = event => this.setState({ rowsPerPage: event.target.value })\r\n\r\n    render() {\r\n        const { rowsPerPage, page } = this.state\r\n        const {\r\n            header,\r\n            renderList,\r\n            searchValue,\r\n            setActiveRoom,\r\n            selectUser,\r\n            onChange,\r\n            clearSearch,\r\n            classes\r\n        } = this.props\r\n\r\n        return (\r\n            <>\r\n                <div className={classes.tableWrapper}>\r\n                    <Paper className={classes.root}>\r\n                        <Typography variant=\"h5\" id=\"tableTitle\" className={classes.header}>\r\n                            {header}\r\n                        </Typography>\r\n                        <Table className={classes.table}>\r\n                            <TableHead className={classes.tableHeader}>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">\r\n                                        <TableInput\r\n                                            name='name'\r\n                                            value={searchValue['name']}\r\n                                            placeholder=\"Name\"\r\n                                            onChange={onChange}\r\n                                            onFocus={clearSearch}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <TableInput\r\n                                            name='email1'\r\n                                            value={searchValue['email1']}\r\n                                            placeholder=\"Email\"\r\n                                            onChange={onChange}\r\n                                            onFocus={clearSearch}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <TableInput\r\n                                            name='phone'\r\n                                            value={searchValue['phone']}\r\n                                            placeholder=\"Phone\"\r\n                                            onChange={onChange}\r\n                                            onFocus={clearSearch}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <TableInput\r\n                                            name='position'\r\n                                            value={searchValue['position']}\r\n                                            placeholder=\"Position\"\r\n                                            onChange={onChange}\r\n                                            onFocus={clearSearch}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        <TableInput\r\n                                            name='manager'\r\n                                            value={searchValue['manager']}\r\n                                            placeholder=\"Manager\"\r\n                                            onChange={onChange}\r\n                                            onFocus={clearSearch}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" className={classes.roomCell}>\r\n                                        <TableInput\r\n                                            name='room'\r\n                                            value={searchValue['room']}\r\n                                            placeholder=\"Room\"\r\n                                            onChange={onChange}\r\n                                            onFocus={clearSearch}\r\n                                        />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    renderList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\r\n                                        <TableRow key={row.ID} classes={{ root: classes.noBorder }}>\r\n                                            <TableCell\r\n                                                align=\"left\"\r\n                                                onClick={() => selectUser(row.ID)}\r\n                                                classes={{ root: classes.noBorder }}>\r\n                                                <div className=\"flex\" style={{ width: '100%', padding: 15 }}>\r\n                                                    <img src={row.photo} alt=\"\" className=\"photo-small\" />\r\n                                                    <p>{row.name}</p>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                            <TableCell\r\n                                                align=\"center\"\r\n                                                onClick={() => selectUser(row.ID)}\r\n                                                classes={{ root: classes.noBorder }}>\r\n                                                {row.email1}\r\n                                            </TableCell>\r\n                                            <TableCell\r\n                                                align=\"center\"\r\n                                                onClick={() => selectUser(row.ID)}\r\n                                                classes={{ root: classes.noBorder }}>\r\n                                                {String(row.phone).replace(/(\\d{3})(\\d{3})(\\d{4})/, \"+$1 $2 $3\")}\r\n                                            </TableCell>\r\n                                            <TableCell\r\n                                                align=\"center\"\r\n                                                onClick={() => selectUser(row.ID)}\r\n                                                classes={{ root: classes.noBorder }}>\r\n                                                {row.position}\r\n                                            </TableCell>\r\n                                            <TableCell\r\n                                                align=\"center\"\r\n                                                onClick={() => selectUser(row.ID)}\r\n                                                classes={{ root: classes.noBorder }}>\r\n                                                {row.manager}\r\n                                            </TableCell>\r\n                                            <TableCell\r\n                                                align=\"center\"\r\n                                                onClick={() => setActiveRoom(row.room)}\r\n                                                classes={{ root: classes.noBorder }}>\r\n                                                {row.room}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Paper >\r\n                    <Grid container>\r\n                        <Grid item xs={12} align='right'>\r\n                            <TablePagination\r\n                                classes={{ root: classes.noBorder }}\r\n                                rowsPerPageOptions={[5, 10, 25]}\r\n                                colSpan={12}\r\n                                count={renderList.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                SelectProps={{ native: true }}\r\n                                onChangePage={this.handleChangePage}\r\n                                onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                                ActionsComponent={TablePaginationActionsWrapped}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nUsersTable.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\n\r\nexport default withStyles(styles)(UsersTable)","import React, { Component, Fragment } from 'react'\r\n\r\nexport default class FilterButtons extends Component {\r\n    state = {\r\n        active: 'all'\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { initialActive } = this.props\r\n        if (initialActive) this.setState({ active: initialActive })\r\n    }\r\n\r\n    switchButton = e => {\r\n        const { returnFilterValue, targetProperty } = this.props\r\n        const { value } = e.target\r\n        this.setState({ active: value }, () => returnFilterValue(targetProperty, value))\r\n    }\r\n\r\n    render() {\r\n        const { active } = this.state\r\n        const {\r\n            optionTwo,\r\n            optionThree,\r\n            headerTwo,\r\n            headerThree,\r\n            header\r\n        } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"filterButtons\">\r\n                    <p>{header}</p>\r\n                    <button\r\n                        className={`optionOne ${active === 'all' && 'active'}`}\r\n                        value='all'\r\n                        onClick={this.switchButton}\r\n                    >\r\n                        All\r\n                    </button>\r\n                    <button\r\n                        className={`optionTwo ${active === optionTwo && 'active'}`}\r\n                        value={optionTwo}\r\n                        onClick={this.switchButton}>\r\n                        {headerTwo}\r\n                    </button>\r\n                    <button\r\n                        className={`optionThree ${active === optionThree && 'active'}`}\r\n                        value={optionThree}\r\n                        onClick={this.switchButton}>\r\n                        {headerThree}\r\n                    </button>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport green from '@material-ui/core/colors/green'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\n\r\nconst styles = {\r\n    root: {\r\n        color: green[600],\r\n        '&$checked': {\r\n            color: green[500],\r\n        },\r\n    },\r\n    checked: {},\r\n}\r\n\r\nconst CheckboxOption = ({ checked, handleChange, value, classes }) => (\r\n    <Checkbox\r\n        checked={checked}\r\n        onChange={handleChange(value)}\r\n        value={value}\r\n        classes={{\r\n            root: classes.root,\r\n            checked: classes.checked,\r\n        }}\r\n    />\r\n)\r\n\r\nexport default withStyles(styles)(CheckboxOption)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormGroup from '@material-ui/core/FormGroup'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport CheckboxOption from './CheckboxOption'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '99%',\r\n        boxShadow: 'none'\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n})\r\n\r\nconst DropdownFilter = ({ header, valueArr, handleChange, targetProp, classes }) => (\r\n    <div className={classes.root}>\r\n        <ExpansionPanel square={true}>\r\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} >\r\n                <Typography className={classes.heading}>\r\n                    {header}\r\n                </Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormGroup>\r\n                        {\r\n                            valueArr.map(el => (\r\n                                <FormControlLabel\r\n                                    key={el}\r\n                                    control={\r\n                                        <CheckboxOption\r\n                                            checked={targetProp[el]}\r\n                                            value={el}\r\n                                            handleChange={handleChange}\r\n                                        />\r\n                                    }\r\n                                    label={el}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n    </div>\r\n)\r\n\r\nDropdownFilter.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(DropdownFilter)","import React, { Component } from 'react'\r\nimport FilterButtons from './FilterButtons'\r\nimport DropdownFilter from './DropdownFilter'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst styles = {\r\n    root: {\r\n        marginLeft: 15,\r\n        marginTop: 15,\r\n    }\r\n}\r\n\r\nclass Filters extends Component {\r\n    state = {\r\n        'active': '1',\r\n        'employment': 'all',\r\n        'location': 'all',\r\n        checkboxes: {\r\n            paymentMode: {\r\n                'PE': false,\r\n                'Personal Card': false,\r\n                'Leobit Card': false,\r\n                'None': false\r\n            },\r\n            position: {\r\n                'CEO': false,\r\n                'Software Engineer': false,\r\n                'Designer': false,\r\n                'Marketing Manager': false,\r\n                'HR Manager': false,\r\n                'Sales Manager': false,\r\n                'English Teacher': false,\r\n                'Project Manager': false,\r\n                'Recruiting Manager': false,\r\n                'Software Quality Control Engineer': false,\r\n                'Office Manager': false,\r\n                'System Administrator': false,\r\n                'Data Science Engineer': false,\r\n                'Accountant/Financial Manager': false,\r\n                'Delivery': false,\r\n                'Recruiter/HR': false,\r\n                'HR/R Director': false,\r\n                'Competence Manager': false\r\n            },\r\n            profile: {\r\n                'CEO': false,\r\n                '.Net': false,\r\n                'C/C++': false,\r\n                'iOS': false,\r\n                'Marketing': false,\r\n                'Ruby': false,\r\n                'Android': false,\r\n                'Management': false,\r\n                'AQA': false,\r\n                'Java': false,\r\n                'UI/UX/': false,\r\n                'Sales': false,\r\n                'BI Pentaho DI ETL': false,\r\n                'Web UI': false,\r\n                'HR': false,\r\n                'English Teacher': false,\r\n                'PHP': false,\r\n                'MQA': false,\r\n                'Office Manager': false,\r\n                'Unity': false,\r\n                'SysAdmin': false,\r\n                'Data Science': false,\r\n                'Accounting': false,\r\n                'Data': false,\r\n                'DevOps': false,\r\n                'Marketing&Business Development': false\r\n            },\r\n            seniority: {\r\n                'Senior': false,\r\n                'Lead': false,\r\n                'Intermediate': false,\r\n                'Junior': false,\r\n                'Trainee': false,\r\n                'Architect': false,\r\n                'VP': false,\r\n                'Director': false\r\n            },\r\n            manager: {\r\n                'Oleksii Smirnov': false,\r\n                'Oleksandr Korytskyy': false,\r\n                'Kristi Sychak': false,\r\n                'Vitaliy Lysovych': false,\r\n                'Mariya Koval': false,\r\n                'Oleksa Stelmakh': false,\r\n                'Halyna Balias': false,\r\n            }\r\n        }\r\n    }\r\n\r\n    returnFilterValue = (property, value) => this.setState({ [property]: value }, () => this.props.toggleSearchParams(property, value))\r\n\r\n    setPayment = name => event => {\r\n        const { checkboxes } = this.state\r\n        const { paymentMode } = checkboxes\r\n        this.setState({\r\n            checkboxes: {\r\n                ...checkboxes,\r\n                paymentMode: {\r\n                    ...paymentMode,\r\n                    [name]: event.target.checked\r\n                }\r\n            }\r\n        }, () => this.getTruthy('paymentMode', this.state.checkboxes.paymentMode))\r\n    }\r\n\r\n    setPosition = name => event => {\r\n        const { checkboxes } = this.state\r\n        const { position } = checkboxes\r\n        this.setState({\r\n            checkboxes: {\r\n                ...checkboxes,\r\n                position: {\r\n                    ...position,\r\n                    [name]: event.target.checked\r\n                }\r\n            }\r\n        }, () => this.getTruthy('position', this.state.checkboxes.position))\r\n    }\r\n\r\n    setProfile = name => event => {\r\n        const { checkboxes } = this.state\r\n        const { profile } = checkboxes\r\n        this.setState({\r\n            checkboxes: {\r\n                ...checkboxes,\r\n                profile: {\r\n                    ...profile,\r\n                    [name]: event.target.checked\r\n                }\r\n            }\r\n        }, () => this.getTruthy('profile', this.state.checkboxes.profile))\r\n    }\r\n\r\n    setSeniority = name => event => {\r\n        const { checkboxes } = this.state\r\n        const { seniority } = checkboxes\r\n        this.setState({\r\n            checkboxes: {\r\n                ...checkboxes,\r\n                seniority: {\r\n                    ...seniority,\r\n                    [name]: event.target.checked\r\n                }\r\n            }\r\n        }, () => this.getTruthy('seniority', this.state.checkboxes.seniority))\r\n    }\r\n\r\n    setManager = name => event => {\r\n        const { checkboxes } = this.state\r\n        const { manager } = checkboxes\r\n        this.setState({\r\n            checkboxes: {\r\n                ...checkboxes,\r\n                manager: {\r\n                    ...manager,\r\n                    [name]: event.target.checked\r\n                }\r\n            }\r\n        }, () => this.getTruthy('manager', this.state.checkboxes.manager))\r\n    }\r\n\r\n    getTruthy = (propName, obj) => {\r\n        const { toggleSearchParams } = this.props\r\n        const keys = Object.keys(obj)\r\n        const validValues = keys.filter(el => obj[el] === true)\r\n        toggleSearchParams(propName, validValues)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { paymentMode, position, profile, seniority, manager } = this.state.checkboxes\r\n        const { classes } = this.props\r\n        const paymentKeys = Object.keys(paymentMode)\r\n        const positionKeys = Object.keys(position)\r\n        const profileKeys = Object.keys(profile)\r\n        const seniorityKeys = Object.keys(seniority)\r\n        const managerKeys = Object.keys(manager)\r\n\r\n        return (\r\n            <section className='flex filterPanel' >\r\n                <Grid container align='left'>\r\n                    <Typography\r\n                        component=\"h2\"\r\n                        variant=\"headline\"\r\n                        className={classes.root}\r\n                        gutterBottom>\r\n                        Filters\r\n                    </Typography>\r\n                    <FilterButtons\r\n                        initialActive='1'\r\n                        header=\"Status:\"\r\n                        headerOne='All'\r\n                        optionTwo='1'\r\n                        headerTwo='Active'\r\n                        optionThree='0'\r\n                        headerThree='Inactive'\r\n                        targetProperty='active'\r\n                        returnFilterValue={this.returnFilterValue}\r\n                    />\r\n                    <FilterButtons\r\n                        header=\"Employement type:\"\r\n                        headerOne='All'\r\n                        optionTwo='FT'\r\n                        headerTwo='FT'\r\n                        optionThree='T&M'\r\n                        headerThree='T&M'\r\n                        targetProperty='employment'\r\n                        returnFilterValue={this.returnFilterValue}\r\n                    />\r\n                    <FilterButtons\r\n                        header=\"Location:\"\r\n                        headerOne='All'\r\n                        optionTwo='Office'\r\n                        headerTwo='Office'\r\n                        optionThree='Remote'\r\n                        headerThree='Remote'\r\n                        targetProperty='location'\r\n                        returnFilterValue={this.returnFilterValue}\r\n                    />\r\n                    <DropdownFilter\r\n                        header='Payment mode'\r\n                        valueArr={paymentKeys}\r\n                        targetProp={paymentMode}\r\n                        handleChange={this.setPayment}\r\n                    />\r\n                    <DropdownFilter\r\n                        header='Position'\r\n                        valueArr={positionKeys}\r\n                        targetProp={position}\r\n                        handleChange={this.setPosition}\r\n                    />\r\n                    <DropdownFilter\r\n                        header='Profile'\r\n                        valueArr={profileKeys}\r\n                        targetProp={profile}\r\n                        handleChange={this.setProfile}\r\n                    />\r\n                    <DropdownFilter\r\n                        header='Seniority'\r\n                        valueArr={seniorityKeys}\r\n                        targetProp={seniority}\r\n                        handleChange={this.setSeniority}\r\n                    />\r\n                    <DropdownFilter\r\n                        header='PM name'\r\n                        valueArr={managerKeys}\r\n                        targetProp={manager}\r\n                        handleChange={this.setManager}\r\n                    />\r\n                </Grid>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Filters)","import React from 'react'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport Navigation from '../components/Navigation'\r\nimport UsersTable from '../components/Table'\r\nimport Filters from '../components/FilterPanel'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { FifthFloor } from '../components/maps/FifthFloor'\r\nimport { SixthFloor } from '../components/maps/SixthFloor'\r\nimport SimpleModal from '../components/SimpleModal'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport arrow from '../images/arrow_back.svg'\r\n\r\nclass App extends React.Component {\r\n\tstate = {\r\n\t\toriginalArray: [],\r\n\t\tfilterParams: [],\r\n\t\trenderList: [],\r\n\t\tsearchValue: {\r\n\t\t\t'name': '',\r\n\t\t\t'email1': '',\r\n\t\t\t'phone': '',\r\n\t\t\t'position': '',\r\n\t\t\t'manager': '',\r\n\t\t\t'room': ''\r\n\t\t},\r\n\t\tactiveRoom: 500,\r\n\t\tviewRoom: false,\r\n\t\tmodalOpen: false\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst creds = localStorage.getItem('gglTkn')\r\n\t\tconst { renderList, dispatch, history } = this.props\r\n\r\n\t\tif (creds === null) history.push('/login')\r\n\t\tif (renderList.length) {\r\n\t\t\tthis.setUserList(renderList)\r\n\t\t} else {\r\n\t\t\tif (creds !== null) {\r\n\t\t\t\tconst token = JSON.parse(creds).token.split('.')[1]\r\n\t\t\t\taxios.get(`https://script.google.com/macros/s/AKfycbwzXr9KSOdun7mIZ452QBuk7jFRig_49IQiUbMPnsMYvy3GBFIS/exec?token=${token}`)\r\n\t\t\t\t\t.then(res => this.setUserList(res.data))\r\n\r\n\t\t\t\t\t.catch(err => dispatch({ type: 'USERS_FAILED', payload: err }))\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tonChange = e => {\r\n\t\tconst { name, value } = e.target\r\n\t\tconst { searchValue } = this.props\r\n\t\tthis.setState({ searchValue: { ...searchValue, [name]: value } }, () => this.filterList(name))\r\n\t}\r\n\r\n\ttoggleModal = () => this.setState({ modalOpen: !this.state.modalOpen })\r\n\r\n\tcreateData = ({ ID, name, email1, phone, position, manager, room, photo }) => ({ ID, name, email1, phone, position, manager, room, photo })\r\n\r\n\tbackToMap = () => this.setState({ renderList: [...this.state.originalArray], viewRoom: false }, this.toggleModal)\r\n\r\n\tsetActiveRoom = activeRoom => this.setState({ activeRoom }, this.toggleModal)\r\n\r\n\tsetRoomList = activeRoom => {\r\n\t\tconst result = this.state.originalArray.filter(el => el.room === activeRoom)\r\n\t\tthis.setState({ renderList: result, viewRoom: true, activeRoom }, this.toggleModal)\r\n\t}\r\n\r\n\tfilterResponse(obj) {\r\n\t\tconst temp = obj.map(el => this.createData(el))\r\n\t\treturn this.photoUrlParser(temp)\r\n\t}\r\n\r\n\tsetUserList(list) {\r\n\t\tconst toRender = this.photoUrlParser(list)\r\n\t\tthis.setState({\r\n\t\t\toriginalArray: toRender,\r\n\t\t\tfilterParams: { active: '1' }\r\n\t\t}, this.filterList)\r\n\t}\r\n\r\n\tselectUser = id => {\r\n\t\tconst { originalArray } = this.state\r\n\t\tconst { dispatch, history } = this.props\r\n\t\tconst result = originalArray.find(el => el.ID === id)\r\n\r\n\t\tdispatch({ type: 'SET_ACTIVE', selectedUser: result })\r\n\t\thistory.push('/user')\r\n\t}\r\n\r\n\tclearSearch = () => this.setState({\r\n\t\tsearchValue: {\r\n\t\t\t'name': '',\r\n\t\t\t'email1': '',\r\n\t\t\t'phone': '',\r\n\t\t\t'position': '',\r\n\t\t\t'manager': '',\r\n\t\t\t'room': ''\r\n\t\t}\r\n\t})\r\n\r\n\tphotoUrlParser(arr) {\r\n\t\tlet result = []\r\n\r\n\t\tarr.forEach(el => {\r\n\t\t\tlet item = { ...el }\r\n\t\t\titem.photo = item.photo.replace(\"open\", \"a/leobit.co/uc\")\r\n\t\t\tresult.push(item)\r\n\t\t})\r\n\t\treturn result\r\n\t}\r\n\r\n\ttoggleSearchParams = (target, value) => {\r\n\t\tconst result = { ...this.state.filterParams }\r\n\r\n\t\tif (value === 'all' || (Array.isArray(value) && !value.length)) {\r\n\t\t\tdelete result[target]\r\n\t\t} else {\r\n\t\t\tresult[target] = value\r\n\t\t}\r\n\t\tthis.setState({ filterParams: result }, this.filterList)\r\n\t}\r\n\r\n\tfilterList() {\r\n\t\tconst { originalArray, searchValue, filterParams } = this.state\r\n\t\tconst { dispatch } = this.props\r\n\t\tlet result = [...originalArray]\r\n\t\tlet temp = []\r\n\r\n\t\tfunction arrFilter(prop) {\r\n\t\t\tfilterParams[prop].forEach(e => temp = [...temp, ...result.filter(el => String(el[prop]) === e)])\r\n\t\t\tresult = [...temp]\r\n\t\t}\r\n\r\n\t\tfor (let prop in filterParams) {\r\n\t\t\tif (Array.isArray(filterParams[prop])) {\r\n\t\t\t\tarrFilter(prop)\r\n\t\t\t} else {\r\n\t\t\t\tresult = result.filter(el => String(el[prop]) === filterParams[prop])\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let item in searchValue) {\r\n\t\t\tif (searchValue[item].length) {\r\n\t\t\t\tresult = result.filter(el => String(el[item]).toLowerCase().match(searchValue[item].toLowerCase()))\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setState({ renderList: result })\r\n\t\tdispatch({ type: 'SET_USERS', payload: result })\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { renderList, searchValue, viewRoom, activeRoom, modalOpen } = this.state\r\n\t\tconst { history } = this.props\r\n\t\tconst header = viewRoom ? `Room #${activeRoom}` : 'User list'\r\n\t\tlet renderMap, floorNumber\r\n\r\n\t\tif (activeRoom < 600) {\r\n\t\t\tfloorNumber = '5'\r\n\t\t\trenderMap = <FifthFloor active={activeRoom} onClick={this.setRoomList} />\r\n\t\t} else {\r\n\t\t\tfloorNumber = '6'\r\n\t\t\trenderMap = <SixthFloor active={activeRoom} onClick={this.setRoomList} />\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Navigation history={history} isLoggedIn={true} />\r\n\t\t\t\t{\r\n\t\t\t\t\tviewRoom && (\r\n\t\t\t\t\t\t<label className='linkPadding' onClick={this.backToMap}>\r\n\t\t\t\t\t\t\t<img src={arrow} alt=\"\" />\r\n\t\t\t\t\t\t\t<Typography variant=\"h5\">Back to map</Typography>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t<div className='wrapper'>\r\n\t\t\t\t\t<Grid container justify='space-around'>\r\n\t\t\t\t\t\t<Grid item xs={2}>\r\n\t\t\t\t\t\t\t<Filters toggleSearchParams={this.toggleSearchParams} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t\t\t<UsersTable\r\n\t\t\t\t\t\t\t\theader={header}\r\n\t\t\t\t\t\t\t\tsearchValue={searchValue}\r\n\t\t\t\t\t\t\t\trenderList={renderList}\r\n\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\tselectUser={this.selectUser}\r\n\t\t\t\t\t\t\t\tsetActiveRoom={this.setActiveRoom}\r\n\t\t\t\t\t\t\t\tclearSearch={this.clearSearch}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</div>\r\n\t\t\t\t<SimpleModal\r\n\t\t\t\t\theader={`${floorNumber}th Floor`}\r\n\t\t\t\t\topen={modalOpen}\r\n\t\t\t\t\thandleState={this.toggleModal}>\r\n\t\t\t\t\t{renderMap}\r\n\t\t\t\t</SimpleModal>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = store => ({ renderList: store.renderList })\r\n\r\nexport default connect(mapStateToProps)(App)","import React from 'react'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Login from './pages/Login'\nimport { User } from './pages/User'\nimport Dashboard from './pages/Dashboard'\nimport './App.css'\n\nconst initialState = {\n  isLoggedIn: null,\n  renderList: [],\n  selectedUser: null,\n  selectedRoom: null,\n  modalOpen: false,\n  error: null\n}\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case 'SET_USERS': {\n      return { ...state, renderList: action.payload }\n    }\n    case 'USERS_FAILED': {\n      return { ...state, error: action.payload }\n    }\n    case 'SET_ACTIVE': {\n      return { ...state, selectedUser: action.selectedUser }\n    }\n    case 'SELECT_ROOM': {\n      return { ...state, selectedRoom: action.room }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nconst store = createStore(reducer)\n\nexport const Router = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path='/' component={Dashboard} />\n        <Route path='/login' component={Login} />\n        <Route path='/user' component={User} />\n      </Switch>\n    </BrowserRouter>\n  </Provider>\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { Router } from './routes'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Router />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/arrow_back.efe3a71a.svg\";"],"sourceRoot":""}